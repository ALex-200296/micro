import { ThemeConfig } from 'antd';

import theme from '@styles/themeExports.module.scss';

export const antdTheme: ThemeConfig = {
  components: {
    Alert: {
      fontSize: Number(theme.fontSizeUiElements),
      colorInfoBorder: 'transparent',
      colorWarningBorder: 'transparent',
      colorSuccessBorder: 'transparent',
      colorErrorBorder: 'transparent',
    },
    Layout: {
      headerBg: theme.primaryBlack,
      triggerBg: theme.primaryBlackHover,
      siderBg: theme.primaryBlack,
    },
    Spin: {
      colorBgMask: 'transparent',
      colorPrimary: theme.primary,
      zIndexPopupBase: Number(theme.screenLockZIndex),
    },
    Drawer: {
      zIndexPopupBase: Number(theme.sidebarZIndex),
    },
    Tabs: {
      colorPrimary: theme.primaryBlack,
      colorPrimaryHover: theme.primaryBlack,
      colorPrimaryActive: theme.primaryBlack,
      colorPrimaryBorder: theme.primaryBlack,
      colorBorderSecondary: 'transparent',
      colorText: theme.textSecondary,
    },
    Button: {
      colorBorder: theme.primary,
      colorText: theme.primary,
      colorTextDisabled: theme.textTertiary,
      borderColorDisabled: theme.borderDefault,
    },
    Badge: {
      fontSizeSM: Number(theme.fontSizeDescription),
      colorBorderBg: 'transparent',
    },
    Descriptions: {
      colorTextTertiary: theme.textSecondary,
    },
    Menu: {
      itemBg: theme.primaryBlack,
      itemColor: theme.primaryWhite,
      itemHoverBg: theme.primaryBlackHover,
      itemHoverColor: theme.primaryWhite,
      itemSelectedBg: theme.primaryWhite,
      itemSelectedColor: theme.primary,
      subMenuItemBg: theme.primaryBlack,
      colorBgElevated: theme.primaryBlack,
      colorBgContainer: theme.primaryBlack,
      zIndexPopupBase: Number(theme.sidebarZIndex),
    },
    Tooltip: {
      fontSize: Number(theme.fontSizeUiElements),
      colorTextLightSolid: theme.primaryBlack,
    },
    Typography: {
      colorTextDescription: theme.textSecondary,
      titleMarginBottom: 0,
      linkHoverDecoration: 'underline 0.031rem',
    },
    Table: {
      colorFillAlter: theme.backgroundGrey,
      colorBorderSecondary: theme.lineDefault,
      colorTextHeading: theme.textSecondary,
      fontSize: Number(theme.fontSizeUiElements),
      fontWeightStrong: 500,
      colorFillSecondary: 'transparent',
      footerBg: 'transparent',
      headerBg: 'transparent',
      bodySortBg: 'transparent',
      headerSortActiveBg: 'transparent',
      headerBorderRadius: 0,
    },
    Pagination: {
      colorBorder: 'transparent',
      itemActiveBg: theme.backgroundGrey,
      fontSize: Number(theme.fontSizeUiElements),
      colorPrimary: theme.primaryBlack,
    },
    Input: {
      colorTextDisabled: theme.textTertiary,
    },
    Select: {
      colorTextDisabled: theme.textTertiary,
      multipleItemBg: theme.backgroundBlue,
    },
    DatePicker: {
      colorTextDisabled: theme.textTertiary,
    },
    Tag: {
      defaultBg: theme.backgroundBlue,
      colorBorder: 'transparent',
    },
    Result: {
      colorTextDescription: theme.primaryBlack,
      titleFontSize: Number(theme.fontSizeH1),
      subtitleFontSize: Number(theme.fontSizeH2),
    },
    Modal: {
      titleFontSize: Number(theme.fontSizeH2),
      zIndexPopupBase: Number(theme.modalZIndex),
    },
    Segmented: {
      trackBg: theme.backgroundGrey,
    },
    Transfer: {
      headerHeight: 40,
      itemPaddingBlock: 3,
    },
    Empty: {
      colorTextDescription: theme.textSecondary,
    },
  },
  token: {
    colorPrimary: theme.primary,
    colorPrimaryHover: theme.primaryHover,
    colorPrimaryBorder: theme.primary,
    colorPrimaryBorderHover: theme.primaryHover,
    colorError: theme.error,
    colorErrorBg: theme.errorBackground,
    colorErrorBgHover: theme.errorBackground,
    colorSuccess: theme.success,
    colorSuccessBg: theme.successBackground,
    colorSuccessBgHover: theme.successBackground,
    colorWarning: theme.warning,
    colorWarningBg: theme.warningBackground,
    colorWarningBgHover: theme.warningBackground,
    colorInfo: theme.primary,
    colorInfoBg: theme.backgroundBlue,
    colorInfoBgHover: theme.backgroundBlue,
    colorLink: theme.primary,
    colorLinkHover: theme.primaryHover,
    colorTextBase: theme.primaryBlack,
    colorText: theme.primaryBlack,
    colorTextSecondary: theme.textSecondary,
    colorTextTertiary: theme.textTertiary,
    colorTextQuaternary: theme.textQuaternary,
    colorTextDisabled: theme.textTertiary,
    colorFill: theme.backgroundGrey,
    colorFillSecondary: theme.backgroundGrey,
    colorFillTertiary: theme.backgroundGrey,
    colorFillQuaternary: theme.backgroundGrey,
    colorBgSpotlight: theme.primaryWhite,
    colorBgLayout: theme.primaryWhite,
    boxShadow: theme.boxShadow,
    colorTextPlaceholder: theme.textTertiary,
    boxShadowSecondary: theme.boxShadowSecondary,
    fontSize: Number(theme.fontSize),
    fontSizeHeading1: Number(theme.fontSizeH1),
    fontSizeHeading2: Number(theme.fontSizeH2),
    fontSizeHeading3: Number(theme.fontSizeH3),
    fontSizeHeading4: Number(theme.fontSize),
    fontSizeHeading5: Number(theme.fontSize),
    fontSizeLG: Number(theme.fontSize),
    fontSizeXL: Number(theme.fontSize),
    fontFamily: theme.fontFamily,
    lineHeightSM: Number(theme.lineHeightBasic),
    lineHeight: Number(theme.lineHeightBasic),
    lineHeightLG: Number(theme.lineHeightBasic),
    lineHeightHeading1: Number(theme.lineHeightBasic),
    lineHeightHeading2: Number(theme.lineHeightH2),
    lineHeightHeading3: Number(theme.lineHeightBasic),
    lineHeightHeading4: Number(theme.lineHeightBasic),
    lineHeightHeading5: Number(theme.lineHeightBasic),
    screenXSMax: Number(theme.breakpointsXsMax),
    screenSM: Number(theme.breakpointsSm),
    screenSMMin: Number(theme.breakpointsSm),
    screenSMMax: Number(theme.breakpointsSmMax),
    screenMD: Number(theme.breakpointsMd),
    screenMDMin: Number(theme.breakpointsMd),
    screenMDMax: Number(theme.breakpointsMdMax),
    screenLG: Number(theme.breakpointsLg),
    screenLGMin: Number(theme.breakpointsLg),
    screenLGMax: Number(theme.breakpointsLgMax),
    screenXL: Number(theme.breakpointsXl),
    screenXLMin: Number(theme.breakpointsXl),
    screenXLMax: Number(theme.breakpointsXl),
    screenXXL: Number(theme.breakpointsXl),
    screenXXLMin: Number(theme.breakpointsXl),
  },
};
